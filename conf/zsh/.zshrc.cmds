# ====================================
# ショートコマンド
# ====================================

# TODO OS分岐いらん
# TODO 拡張コマンドを使う前提でいい
# TODO プラグインなし版と、あり版を切り替える機能

# TODO vimは全てvimrcで、プラグインなしの生き方
# -> Lintとステップ実行、AIがない
# -> Lintは欲しいか...
# 一応ホバーもできないが、見ないし良いか

# vim
function v() {
    _lazy_install fzf fzf
    _lazy_install rg ripgrep
    if [ ! -d ~/.vim/plugged ]; then # vim-plugがない場合いれる
        spin 'install vim-plug' \
            curl -fSsLo ~/.vim/autoload/plug.vim --create-dirs \
            https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
        vim -c "PlugInstall"
    else
        vim -c "CocCommand explorer --no-focus --width 30" $@
    fi
}

# zoxide
# + eza fzf bat
function _zoxide() {
    _lazy_install zoxide zoxide
    _lazy_install eza eza
    _lazy_install fzf fzf
    _lazy_install bat bat
    eval "$(zoxide init zsh)"
    zi
}
export _ZO_FZF_OPTS='
    --no-sort --height 75% --reverse --margin=0,1 --exit-0 --select-1
    --bind ctrl-f:page-down,ctrl-b:page-up
    --bind pgdn:preview-page-down,pgup:preview-page-up
    --prompt="❯ "
    --color bg+:#262626,fg+:#dadada,hl:#f09479,hl+:#f09479
    --color border:#303030,info:#cfcfb0,header:#80a0ff,spinner:#36c692
    --color prompt:#87afff,pointer:#ff5189,marker:#f09479
    --preview "([[ -e '{2..}/README.md' ]] && bat --color=always --style=numbers --line-range=:50 '{2..}/README.md') || eza --color=always --group-directories-first --oneline {2..}"
'
alias zi='_zoxide'

# ls → eza
function l() {
    _lazy_install eza eza
    if type eza > /dev/null 2>&1; then
        if [ "$(uname)" = "Darwin" ]; then
            eza -abghHliS --icons --git $@
        else
            eza -abghHliS $@
        fi
    else
        if [ "$(uname)" = "Darwin" ]; then
            ls -AFGlihrt --color=auto $@
        else
            ls -AFlihrt --color=auto $@
        fi
    fi
}
function tree() {
    _lazy_install eza eza
    if type eza > /dev/null 2>&1; then
        if [ "$(uname)" = "Darwin" ]; then
            eza -bghHliST --icons --git $@
        else
            eza -bghHliST $@
        fi
    else
        pwd;find . | sort | sed '1d;s/^\.//;s/\/\([^/]*\)$/|--\1/;s/\/[^/|]*/|  /g'
    fi
}

# エクスプローラ
function e() {
    _lazy_install yazi yazi
    if [ ! -f ~/.config/yazi/yazi.toml ]; then
        ln -nfs ~/git/dotfiles/conf/config/yazi.toml ~/.config/yazi/yazi.toml
    fi
    yazi
}

# Lazy Git
function g() {
    _lazy_install lazygit lazygit
    lazygit
}

# Lazy Docker
function d() {
    _lazy_install lazydocker lazydocker
    CNT=$(ps aux | grep -c OrbStack)
    if [ $CNT -eq 1 ]; then
        info 'START OrbStack'
        open -g /Applications/OrbStack.app
        sleep 1
        _lazy_install genact genact
        genact -s 10 --exit-after-modules 1 -m botnet
        genact -s 10 --exit-after-modules 1 -m bruteforce
    fi
    lazydocker
}

# SSH / SCP 接続
function s() {
    _lazy_install gum gum
    if [ "$1" = "ssh" ]; then
        if [ ! -f ~/.ssh/known_hosts ]; then
            ssh $(gum input --prompt 'target. e.g.) github.com: ')
        else
            ssh $(cat ~/.ssh/known_hosts | awk '{print $1}' | uniq | gum choose)
        fi
    fi
    if [ "$1" = "scp" ]; then
        _lazy_install termscp veeso/termscp/termscp
        termscp
    fi
}
function _s() { _values '' 'ssh[ssh接続]' 'scp[scp接続]' }
compdef _s s

# top → bottomを使用
function top() {
    _lazy_install btm bottom
    btm --battery
}

# マトリックスアニメ
function c() {
    _lazy_install genact genact
    genact -s 10 --exit-after-modules 1 -m botnet
    genact -s 10 --exit-after-modules 1 -m bruteforce
    _lazy_install cmatrix cmatrix
    cmatrix
}


# ====================================
# 便利ツール
# ====================================

# バックiサーチをhistoryのfzfにする
function incremental_search_history() {
    _lazy_install fzf
    selected=`history -E 0 | fzf --tac --height 75% --reverse --margin=0,1 | cut -b 24-`
    BUFFER=`[ ${#selected} -gt 0 ] && echo $selected || echo $BUFFER`
    CURSOR=${#BUFFER}
    zle redisplay
}
zle -N incremental_search_history
bindkey "^r" incremental_search_history

# 時計
function clock() {
    _lazy_install tty-clock tty-clock
    tty-clock
}

# Gif作成コマンド
function gif() {
    _lazy_install ffmpeg ffmpeg
    _lazy_install gum gum
    ffmpeg -i $(ls -A | gum choose) -r 10 $(gum input --prompt 'e.g.) test.gif: ')
}

# 入れたコマンドを全部消す
function Azathoth() {
    _lazy_install gum gum
    if ! gum confirm; then
        return
    fi
    brew list
    \rm -rf ~/.nvm
    \rm ~/.netrc
    # この辺を入れて使っているメモ代わり
    DEL=(fastfetch
    zoxide fzf bat eza ripgrep
    lazygit lazydocker
    genact cmatrix tty-clock
    yazi gobang termscp gum
    ffmpeg jq
    bottom
    nmap gobuster
    zsh-syntax-highlighting zsh-autosuggestions
    zsh-git-prompt powerlevel10k
    )
    for v in ${DEL[@]}; do
        brew uninstall $v
    done
    exec $SHELL -l
}

